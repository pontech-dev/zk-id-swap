/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NewImport } from './routes/new'
import { Route as ShopItemIdImport } from './routes/shop/$itemId'
import { Route as ChatChatImport } from './routes/chat/_chat'
import { Route as ChatChatIndexImport } from './routes/chat/_chat.index'
import { Route as ChatChatTargetImport } from './routes/chat/_chat.$target'

// Create Virtual Routes

const ChatImport = createFileRoute('/chat')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ChatRoute = ChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const NewRoute = NewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ShopItemIdRoute = ShopItemIdImport.update({
  id: '/shop/$itemId',
  path: '/shop/$itemId',
  getParentRoute: () => rootRoute,
} as any)

const ChatChatRoute = ChatChatImport.update({
  id: '/_chat',
  getParentRoute: () => ChatRoute,
} as any)

const ChatChatIndexRoute = ChatChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatChatRoute,
} as any)

const ChatChatTargetRoute = ChatChatTargetImport.update({
  id: '/$target',
  path: '/$target',
  getParentRoute: () => ChatChatRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/chat/_chat': {
      id: '/chat/_chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatChatImport
      parentRoute: typeof ChatRoute
    }
    '/shop/$itemId': {
      id: '/shop/$itemId'
      path: '/shop/$itemId'
      fullPath: '/shop/$itemId'
      preLoaderRoute: typeof ShopItemIdImport
      parentRoute: typeof rootRoute
    }
    '/chat/_chat/$target': {
      id: '/chat/_chat/$target'
      path: '/$target'
      fullPath: '/chat/$target'
      preLoaderRoute: typeof ChatChatTargetImport
      parentRoute: typeof ChatChatImport
    }
    '/chat/_chat/': {
      id: '/chat/_chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatChatIndexImport
      parentRoute: typeof ChatChatImport
    }
  }
}

// Create and export the route tree

interface ChatChatRouteChildren {
  ChatChatTargetRoute: typeof ChatChatTargetRoute
  ChatChatIndexRoute: typeof ChatChatIndexRoute
}

const ChatChatRouteChildren: ChatChatRouteChildren = {
  ChatChatTargetRoute: ChatChatTargetRoute,
  ChatChatIndexRoute: ChatChatIndexRoute,
}

const ChatChatRouteWithChildren = ChatChatRoute._addFileChildren(
  ChatChatRouteChildren,
)

interface ChatRouteChildren {
  ChatChatRoute: typeof ChatChatRouteWithChildren
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatChatRoute: ChatChatRouteWithChildren,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/new': typeof NewRoute
  '/chat': typeof ChatChatRouteWithChildren
  '/shop/$itemId': typeof ShopItemIdRoute
  '/chat/$target': typeof ChatChatTargetRoute
  '/chat/': typeof ChatChatIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/new': typeof NewRoute
  '/chat': typeof ChatChatIndexRoute
  '/shop/$itemId': typeof ShopItemIdRoute
  '/chat/$target': typeof ChatChatTargetRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/new': typeof NewRoute
  '/chat': typeof ChatRouteWithChildren
  '/chat/_chat': typeof ChatChatRouteWithChildren
  '/shop/$itemId': typeof ShopItemIdRoute
  '/chat/_chat/$target': typeof ChatChatTargetRoute
  '/chat/_chat/': typeof ChatChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/new'
    | '/chat'
    | '/shop/$itemId'
    | '/chat/$target'
    | '/chat/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/new' | '/chat' | '/shop/$itemId' | '/chat/$target'
  id:
    | '__root__'
    | '/'
    | '/new'
    | '/chat'
    | '/chat/_chat'
    | '/shop/$itemId'
    | '/chat/_chat/$target'
    | '/chat/_chat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  NewRoute: typeof NewRoute
  ChatRoute: typeof ChatRouteWithChildren
  ShopItemIdRoute: typeof ShopItemIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  NewRoute: NewRoute,
  ChatRoute: ChatRouteWithChildren,
  ShopItemIdRoute: ShopItemIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/new",
        "/chat",
        "/shop/$itemId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/new": {
      "filePath": "new.tsx"
    },
    "/chat": {
      "filePath": "chat",
      "children": [
        "/chat/_chat"
      ]
    },
    "/chat/_chat": {
      "filePath": "chat/_chat.tsx",
      "parent": "/chat",
      "children": [
        "/chat/_chat/$target",
        "/chat/_chat/"
      ]
    },
    "/shop/$itemId": {
      "filePath": "shop/$itemId.tsx"
    },
    "/chat/_chat/$target": {
      "filePath": "chat/_chat.$target.tsx",
      "parent": "/chat/_chat"
    },
    "/chat/_chat/": {
      "filePath": "chat/_chat.index.tsx",
      "parent": "/chat/_chat"
    }
  }
}
ROUTE_MANIFEST_END */
