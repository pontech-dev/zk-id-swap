/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NewImport } from './routes/new'
import { Route as ChatIndexImport } from './routes/chat/index'
import { Route as ShopItemIdImport } from './routes/shop/$itemId'
import { Route as ChatTargetImport } from './routes/chat/$target'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const NewRoute = NewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ChatIndexRoute = ChatIndexImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRoute,
} as any)

const ShopItemIdRoute = ShopItemIdImport.update({
  id: '/shop/$itemId',
  path: '/shop/$itemId',
  getParentRoute: () => rootRoute,
} as any)

const ChatTargetRoute = ChatTargetImport.update({
  id: '/chat/$target',
  path: '/chat/$target',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewImport
      parentRoute: typeof rootRoute
    }
    '/chat/$target': {
      id: '/chat/$target'
      path: '/chat/$target'
      fullPath: '/chat/$target'
      preLoaderRoute: typeof ChatTargetImport
      parentRoute: typeof rootRoute
    }
    '/shop/$itemId': {
      id: '/shop/$itemId'
      path: '/shop/$itemId'
      fullPath: '/shop/$itemId'
      preLoaderRoute: typeof ShopItemIdImport
      parentRoute: typeof rootRoute
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/new': typeof NewRoute
  '/chat/$target': typeof ChatTargetRoute
  '/shop/$itemId': typeof ShopItemIdRoute
  '/chat': typeof ChatIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/new': typeof NewRoute
  '/chat/$target': typeof ChatTargetRoute
  '/shop/$itemId': typeof ShopItemIdRoute
  '/chat': typeof ChatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/new': typeof NewRoute
  '/chat/$target': typeof ChatTargetRoute
  '/shop/$itemId': typeof ShopItemIdRoute
  '/chat/': typeof ChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/new' | '/chat/$target' | '/shop/$itemId' | '/chat'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/new' | '/chat/$target' | '/shop/$itemId' | '/chat'
  id: '__root__' | '/' | '/new' | '/chat/$target' | '/shop/$itemId' | '/chat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  NewRoute: typeof NewRoute
  ChatTargetRoute: typeof ChatTargetRoute
  ShopItemIdRoute: typeof ShopItemIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  NewRoute: NewRoute,
  ChatTargetRoute: ChatTargetRoute,
  ShopItemIdRoute: ShopItemIdRoute,
  ChatIndexRoute: ChatIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/new",
        "/chat/$target",
        "/shop/$itemId",
        "/chat/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/new": {
      "filePath": "new.tsx"
    },
    "/chat/$target": {
      "filePath": "chat/$target.tsx"
    },
    "/shop/$itemId": {
      "filePath": "shop/$itemId.tsx"
    },
    "/chat/": {
      "filePath": "chat/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
